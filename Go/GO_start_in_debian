Shell
sha256sum go1.15.linux-amd64.tar.gz

Установка Go на Debian 10
Теперь используем tar для извлечения тарбола. Следующие флаги используются для указания tar, как извлекать, просматривать и оперировать над скачанным тарболом:

Флаг x говорит, что мы хотим извлечь файлы из тарбола;
Флаг v указывает, что нам нужен подробный вывод, что включает список извлеченных файлов;
Флаг f говорит tar, что мы уточняем название файла, над которым будут проводиться операции.
Теперь используем все вышесказанное и запустим команду для извлечения пакета:

Shell
tar xvf go1.15.linux-amd64.tar.gz

Теперь у вас есть директория под названием go в домашнем каталоге. Рекурсивно изменим владельца и группу данной директории на root, и переместим её в /usr/local:

Shell
sudo chown -R root:root ./go
sudo mv go /usr/local
На заметку: Хотя рекомендуется использовать локацию /usr/local/go, некоторые пользователи выбирают место по своему усмотрению.

На данный момент использование Go потребует уточнение полного пути к его локации установки в командной строке. Для создания более удобной интеграции Go с пользователями установим несколько путей.

Настройка GOPATH в Debian 10
На данной этапе мы настроим несколько путей в среде.

Для начала настроим корневое значение, что указывает Go, на то где искать файлы:

Shell
nano ~/.profile
В конец файла добавим следующие строки:

Go
export GOPATH=$HOME/work
export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin
Если вы выбрали другое место для установки Go, тогда вместо вышеуказанных путей добавьте следующие строчки в файл. В данном примере мы добавляем строчки, что могут потребоваться, если вы установили Go в домашнюю директорию.

Go
export GOROOT=$HOME/go
export GOPATH=$HOME/work
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
Вставьте подходящие строчки в ваш профиль, сохраните и закройте файл.

Затем обновите профиль, запустив:

. ~/.profile
source ~/.profile
Установив Go и настроив пути среды, давайте подтвердим, что все работаем должным образом через небольшую программу.

Тестирование правильности установки Go на Debian 10
Теперь, когда Go установлен, а пути для сервера настроены, надо убедиться, что Go работает правильно.

Создадим директорию для рабочего пространства Go, куда будут помещаться созданные файлы:

Shell
mkdir $HOME/work
Затем создадим директорию в данной папке для тестового файла. Используем директорию my_project в качестве примера:

Shell
mkdir -p work/src/my_project/hello
Затем создадим традиционный файл «Hello World»:

Shell
nano ~/work/src/my_project/hello/hello.go
Через текстовый редактор добавим следующий код в файл, что использует главные пакеты Go, импортиртирует форматированный компонент содержимого I/O и настраивает новую функцию для вывода «Hello, World!», после чего запускаем:

~/work/src/my_project/hello/hello.go
package main
 
import "fmt"
 
func main() {
   fmt.Printf("Hello, World!\n")
}
После запуска программы будет выводиться результат Hello, World!, тем самым доказывая, что Go-программы компилируются должным образом.


1) cd ~

2) vi .bashrc

3) Inside .bashrc, enter the following: PATH=$PATH:/c/Go/bin

export PATH=$PATH:/usr/local/go/bin




